{"version":3,"sources":["projects/react-calculator/src/Display.jsx","projects/react-calculator/src/Buttons.jsx","projects/react-calculator/src/Calculator.jsx"],"names":["Display","display","id","className","Buttons","onClickHandler","btns","useMemo","name","value","key","useEffect","handleKeyDown","e","i","length","document","addEventListener","removeEventListener","map","btn","tabIndex","onClick","Calculator","useState","isLocked","state","setState","calculate","a","b","operation","console","log","setTimeout","action","str","last","slice","test","formel","some","el","includes","numbers","currentNumber","ops","push","Number","pop","result"],"mappings":"4LAQeA,MARf,YAA+B,IAAZC,EAAW,EAAXA,QACjB,OACE,qBAAKC,GAAG,UAAUC,UAAU,UAA5B,SACGF,KCoDQG,MArDf,YAAsC,IAAnBC,EAAkB,EAAlBA,eACXC,EAAOC,mBACX,iBAAM,CACJ,CAAEC,KAAM,QAASC,MAAO,KAAMC,IAAK,KACnC,CAAEF,KAAM,YAAaC,MAAO,SAAKC,IAAK,aACtC,CAAEF,KAAM,SAAUC,MAAO,OAAKC,IAAK,KACnC,CAAEF,KAAM,QAASC,MAAO,EAAGC,IAAK,KAChC,CAAEF,KAAM,QAASC,MAAO,EAAGC,IAAK,KAChC,CAAEF,KAAM,OAAQC,MAAO,EAAGC,IAAK,KAC/B,CAAEF,KAAM,WAAYC,MAAO,OAAKC,IAAK,KACrC,CAAEF,KAAM,OAAQC,MAAO,EAAGC,IAAK,KAC/B,CAAEF,KAAM,OAAQC,MAAO,EAAGC,IAAK,KAC/B,CAAEF,KAAM,MAAOC,MAAO,EAAGC,IAAK,KAC9B,CAAEF,KAAM,WAAYC,MAAO,IAAKC,IAAK,KACrC,CAAEF,KAAM,MAAOC,MAAO,EAAGC,IAAK,KAC9B,CAAEF,KAAM,MAAOC,MAAO,EAAGC,IAAK,KAC9B,CAAEF,KAAM,QAASC,MAAO,EAAGC,IAAK,KAChC,CAAEF,KAAM,MAAOC,MAAO,IAAKC,IAAK,KAChC,CAAEF,KAAM,OAAQC,MAAO,EAAGC,IAAK,KAC/B,CAAEF,KAAM,UAAWC,MAAO,IAAKC,IAAK,KACpC,CAAEF,KAAM,SAAUC,MAAO,IAAKC,IAAK,YAErC,IAcF,OAXAC,qBAAU,WACR,SAASC,EAAcC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAKS,OAAQD,IAC3BR,EAAKQ,GAAGJ,MAAQG,EAAEH,KAAKL,EAAeC,EAAKQ,GAAGL,OAKtD,OADAO,SAASC,iBAAiB,UAAWL,GAC9B,kBAAMI,SAASE,oBAAoB,UAAWN,MACpD,CAACN,EAAMD,IAGR,qBAAKF,UAAU,UAAf,SACGG,EAAKa,KAAI,SAACC,GAAD,OACR,wBAEElB,GAAIkB,EAAIZ,KACRL,UAAWiB,EAAIZ,KACfa,SAAS,KACTC,QAAS,kBAAMjB,EAAee,EAAIX,QALpC,SAOGW,EAAIX,OANAW,EAAIZ,YCsHJe,UA3JI,WACjB,MAA0BC,mBAAS,CACjCvB,QAAS,IACTwB,UAAU,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,SAASC,EAAUC,EAAGC,EAAGC,GACvB,OAAQA,GACN,IAAK,IACH,OAAOF,EAAIC,EACb,IAAK,IACH,OAAOA,EAAID,EACb,IAAK,OACH,OAAOA,EAAIC,EACb,IAAK,OACH,OAAOA,EAAID,EACb,QACEG,QAAQC,IAAI,qBA8GlB,MAtIsB,QAAlBP,EAAMzB,SAAuC,aAAlByB,EAAMzB,UACnC0B,EAAS,CACP1B,QAAQ,UAAD,OAAYyB,EAAMzB,SACzBwB,UAAU,IAEZS,YAAW,WACTP,EAAS,CACP1B,QAAS,IACTwB,UAAU,MAEX,OA6HH,qBAAKtB,UAAU,mBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,eACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,cAAC,EAAD,CAASF,QAASyB,EAAMzB,UACxB,cAAC,EAAD,CAASI,eAjHjB,SAAwB8B,GACtB,IA2CyBC,EA3CnBnC,EAAUyB,EAAMzB,QAChBwB,EAAWC,EAAMD,SACjBY,EAAOpC,EAAQqC,OAAO,GAC5B,IAAKb,EACH,OAAQU,GACN,IAAK,KACHR,EAAS,CACP1B,QAAS,MAEX,MACF,IAAK,SACH0B,EAAS,CACP1B,QAASA,EAAQqC,MAAM,GAAI,KAE7B,MACF,IAAK,IACH,GAAI,YAAYC,KAAKb,EAAMzB,SACzB,MACU,KAAKsC,KAAKF,GAGpBV,EAAS,CAAE1B,QAASA,EAAU,MAF9B0B,EAAS,CAAE1B,QAASA,EAAU,OAIhC,MACF,IAAK,IACL,IAAK,IACL,IAAK,OACL,IAAK,OACC,OAAOsC,KAAKF,GACdV,EAAS,CAAE1B,QAASA,EAAUkC,IACrB,KAAKI,KAAKtC,EAAQqC,OAAO,IAClCX,EAAS,CACP1B,QACa,MAAXkC,EACIlC,EAAQqC,MAAM,GAAI,GAAKH,EACd,MAATE,EACApC,EAAQqC,MAAM,GAAI,GAAK,IACvBrC,EAAUkC,IAEbR,EAAS,CAAE1B,QAASA,EAAQqC,MAAM,GAAI,GAAKH,IAClD,MACF,IAAK,IACH,IAAIK,EAASvC,EAIb,IAHmBmC,EAGLI,GAFRzB,QAAU,GACd,CAAC,GAAI,IAAK,IAAK,OAAK,QAAK0B,MAAK,SAACC,GAAD,OAAQN,EAAIO,SAASD,MAC9B,OACvB,MAAQ,OAAOH,KAAKC,EAAOA,EAAOzB,OAAS,KACzCyB,EAASA,EAAOF,MAAM,GAAI,GAO5B,IAJA,IAAMM,EAAU,GACZC,EAAgB,GACdC,EAAM,GAEHhC,EAAI,EAAGA,EAAI0B,EAAOzB,OAAQD,IACjC,GAAkB,MAAd0B,EAAO1B,IAAgC,KAAlB+B,EACvBA,EAAgB,SACX,GAAI,QAAQN,KAAKC,EAAO1B,IAC7B+B,GAAgCL,EAAO1B,OAClC,CAKL,IAJsB,KAAlB+B,IACFD,EAAQG,KAAKC,OAAOH,IACpBA,EAAgB,IAGhBC,EAAI/B,OAAS,IAEc,MAAxB+B,EAAIA,EAAI/B,OAAS,IACQ,MAAxB+B,EAAIA,EAAI/B,OAAS,IACJ,SAAdyB,EAAO1B,IAA4B,SAAd0B,EAAO1B,KAG/B8B,EAAQG,KACNnB,EAAUgB,EAAQK,MAAOL,EAAQK,MAAOH,EAAIG,QAGhDH,EAAIC,KAAKP,EAAO1B,IAOpB,IAJsB,KAAlB+B,IACFD,EAAQG,KAAKC,OAAOH,IACpBA,EAAgB,IAEXC,EAAI/B,QACT6B,EAAQG,KAAKnB,EAAUgB,EAAQK,MAAOL,EAAQK,MAAOH,EAAIG,QAG3D,IAAMC,EAASN,EAAQK,MACvBtB,EAAS,CACP1B,QAAS,GAAKiD,IAEhB,MACF,QACEvB,EAAS,CACP1B,QAAS,iBAAiBsC,KAAKtC,GAC3BA,EAAQqC,MAAM,GAAI,GAAKH,EACvBlC,EAAUkC","file":"static/js/7.052673aa.chunk.js","sourcesContent":["function Display({ display }) {\r\n  return (\r\n    <div id=\"display\" className=\"display\">\r\n      {display}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import { useEffect, useMemo } from \"react\";\r\n\r\nfunction Buttons({ onClickHandler }) {\r\n  const btns = useMemo(\r\n    () => [\r\n      { name: \"clear\", value: \"AC\", key: \" \" },\r\n      { name: \"backspace\", value: \"⇐\", key: \"Backspace\" },\r\n      { name: \"divide\", value: \"÷\", key: \"/\" },\r\n      { name: \"seven\", value: 7, key: \"7\" },\r\n      { name: \"eight\", value: 8, key: \"8\" },\r\n      { name: \"nine\", value: 9, key: \"9\" },\r\n      { name: \"multiply\", value: \"×\", key: \"*\" },\r\n      { name: \"four\", value: 4, key: \"4\" },\r\n      { name: \"five\", value: 5, key: \"5\" },\r\n      { name: \"six\", value: 6, key: \"6\" },\r\n      { name: \"subtract\", value: \"-\", key: \"-\" },\r\n      { name: \"one\", value: 1, key: \"1\" },\r\n      { name: \"two\", value: 2, key: \"2\" },\r\n      { name: \"three\", value: 3, key: \"3\" },\r\n      { name: \"add\", value: \"+\", key: \"+\" },\r\n      { name: \"zero\", value: 0, key: \"0\" },\r\n      { name: \"decimal\", value: \".\", key: \".\" },\r\n      { name: \"equals\", value: \"=\", key: \"Enter\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleKeyDown(e) {\r\n      for (let i = 0; i < btns.length; i++) {\r\n        if (btns[i].key === e.key) onClickHandler(btns[i].value);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [btns, onClickHandler]);\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      {btns.map((btn) => (\r\n        <button\r\n          key={btn.name}\r\n          id={btn.name}\r\n          className={btn.name}\r\n          tabIndex=\"-1\"\r\n          onClick={() => onClickHandler(btn.value)}\r\n        >\r\n          {btn.value}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import { useState } from \"react\";\nimport \"./Calculator.scss\";\nimport Display from \"./Display\";\nimport Buttons from \"./Buttons\";\n\nconst Calculator = () => {\n  const [state, setState] = useState({\n    display: \"0\",\n    isLocked: false,\n  });\n\n  if (state.display === \"NaN\" || state.display === \"Infinity\") {\n    setState({\n      display: `Error: ${state.display}`,\n      isLocked: true,\n    });\n    setTimeout(() => {\n      setState({\n        display: \"0\",\n        isLocked: false,\n      });\n    }, 1500);\n  }\n\n  function calculate(a, b, operation) {\n    switch (operation) {\n      case \"+\":\n        return a + b;\n      case \"-\":\n        return b - a;\n      case \"×\":\n        return a * b;\n      case \"÷\":\n        return b / a;\n      default:\n        console.log(\"Invalid operator\");\n        break;\n    }\n  }\n\n  function onClickHandler(action) {\n    const display = state.display;\n    const isLocked = state.isLocked;\n    const last = display.slice(-1);\n    if (!isLocked) {\n      switch (action) {\n        case \"AC\":\n          setState({\n            display: \"0\",\n          });\n          break;\n        case \"⇐\":\n          setState({\n            display: display.slice(0, -1),\n          });\n          break;\n        case \".\":\n          if (/\\d+\\.\\d*$/.test(state.display)) {\n            break;\n          } else if (!/\\d/.test(last)) {\n            setState({ display: display + \"0.\" });\n          } else {\n            setState({ display: display + \".\" });\n          }\n          break;\n        case \"+\":\n        case \"-\":\n        case \"×\":\n        case \"÷\":\n          if (/[\\d]/.test(last)) {\n            setState({ display: display + action });\n          } else if (/\\d/.test(display.slice(-2))) {\n            setState({\n              display:\n                action !== \"-\"\n                  ? display.slice(0, -1) + action\n                  : last === \"-\"\n                  ? display.slice(0, -1) + \"+\"\n                  : display + action,\n            });\n          } else setState({ display: display.slice(0, -2) + action });\n          break;\n        case \"=\":\n          let formel = display;\n          const condition = (str) =>\n            str.length <= 1 &&\n            [\"\", \"+\", \"-\", \"×\", \"÷\"].some((el) => str.includes(el));\n          if (condition(formel)) return;\n          while (!/[\\d]/.test(formel[formel.length - 1])) {\n            formel = formel.slice(0, -1);\n          }\n\n          const numbers = [];\n          let currentNumber = \"\";\n          const ops = [];\n\n          for (let i = 0; i < formel.length; i++) {\n            if (formel[i] === \"-\" && currentNumber === \"\") {\n              currentNumber = \"-\";\n            } else if (/[\\d.]/.test(formel[i])) {\n              currentNumber = currentNumber + formel[i];\n            } else {\n              if (currentNumber !== \"\") {\n                numbers.push(Number(currentNumber));\n                currentNumber = \"\";\n              }\n              while (\n                ops.length > 0 &&\n                !(\n                  (ops[ops.length - 1] === \"-\" ||\n                    ops[ops.length - 1] === \"+\") &&\n                  (formel[i] === \"×\" || formel[i] === \"÷\")\n                )\n              ) {\n                numbers.push(\n                  calculate(numbers.pop(), numbers.pop(), ops.pop())\n                );\n              }\n              ops.push(formel[i]);\n            }\n          }\n          if (currentNumber !== \"\") {\n            numbers.push(Number(currentNumber));\n            currentNumber = \"\";\n          }\n          while (ops.length) {\n            numbers.push(calculate(numbers.pop(), numbers.pop(), ops.pop()));\n          }\n\n          const result = numbers.pop();\n          setState({\n            display: \"\" + result + \"\",\n          });\n          break;\n        default:\n          setState({\n            display: /([^.0-9]0|^0)$/.test(display)\n              ? display.slice(0, -1) + action\n              : display + action,\n          });\n          break;\n      }\n    }\n  }\n\n  return (\n    <div className=\"react-calculator\">\n      <div className=\"container\">\n        <div className=\"phone\">\n          <div className=\"phone-btns\" />\n          <div className=\"camera\" />\n          <div className=\"sensor\" />\n          <Display display={state.display} />\n          <Buttons onClickHandler={onClickHandler} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"sourceRoot":""}